/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AddImport } from './routes/add'
import { Route as IndexImport } from './routes/index'
import { Route as RestaurantIdIndexImport } from './routes/restaurant.$id.index'
import { Route as RestaurantIdRateImport } from './routes/restaurant.$id.rate'
import { Route as RestaurantIdAddVisitImport } from './routes/restaurant.$id.add-visit'

// Create/Update Routes

const AddRoute = AddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RestaurantIdIndexRoute = RestaurantIdIndexImport.update({
  id: '/restaurant/$id/',
  path: '/restaurant/$id/',
  getParentRoute: () => rootRoute,
} as any)

const RestaurantIdRateRoute = RestaurantIdRateImport.update({
  id: '/restaurant/$id/rate',
  path: '/restaurant/$id/rate',
  getParentRoute: () => rootRoute,
} as any)

const RestaurantIdAddVisitRoute = RestaurantIdAddVisitImport.update({
  id: '/restaurant/$id/add-visit',
  path: '/restaurant/$id/add-visit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddImport
      parentRoute: typeof rootRoute
    }
    '/restaurant/$id/add-visit': {
      id: '/restaurant/$id/add-visit'
      path: '/restaurant/$id/add-visit'
      fullPath: '/restaurant/$id/add-visit'
      preLoaderRoute: typeof RestaurantIdAddVisitImport
      parentRoute: typeof rootRoute
    }
    '/restaurant/$id/rate': {
      id: '/restaurant/$id/rate'
      path: '/restaurant/$id/rate'
      fullPath: '/restaurant/$id/rate'
      preLoaderRoute: typeof RestaurantIdRateImport
      parentRoute: typeof rootRoute
    }
    '/restaurant/$id/': {
      id: '/restaurant/$id/'
      path: '/restaurant/$id'
      fullPath: '/restaurant/$id'
      preLoaderRoute: typeof RestaurantIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/restaurant/$id/add-visit': typeof RestaurantIdAddVisitRoute
  '/restaurant/$id/rate': typeof RestaurantIdRateRoute
  '/restaurant/$id': typeof RestaurantIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/restaurant/$id/add-visit': typeof RestaurantIdAddVisitRoute
  '/restaurant/$id/rate': typeof RestaurantIdRateRoute
  '/restaurant/$id': typeof RestaurantIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/restaurant/$id/add-visit': typeof RestaurantIdAddVisitRoute
  '/restaurant/$id/rate': typeof RestaurantIdRateRoute
  '/restaurant/$id/': typeof RestaurantIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add'
    | '/restaurant/$id/add-visit'
    | '/restaurant/$id/rate'
    | '/restaurant/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add'
    | '/restaurant/$id/add-visit'
    | '/restaurant/$id/rate'
    | '/restaurant/$id'
  id:
    | '__root__'
    | '/'
    | '/add'
    | '/restaurant/$id/add-visit'
    | '/restaurant/$id/rate'
    | '/restaurant/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRoute: typeof AddRoute
  RestaurantIdAddVisitRoute: typeof RestaurantIdAddVisitRoute
  RestaurantIdRateRoute: typeof RestaurantIdRateRoute
  RestaurantIdIndexRoute: typeof RestaurantIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRoute: AddRoute,
  RestaurantIdAddVisitRoute: RestaurantIdAddVisitRoute,
  RestaurantIdRateRoute: RestaurantIdRateRoute,
  RestaurantIdIndexRoute: RestaurantIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add",
        "/restaurant/$id/add-visit",
        "/restaurant/$id/rate",
        "/restaurant/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add": {
      "filePath": "add.tsx"
    },
    "/restaurant/$id/add-visit": {
      "filePath": "restaurant.$id.add-visit.tsx"
    },
    "/restaurant/$id/rate": {
      "filePath": "restaurant.$id.rate.tsx"
    },
    "/restaurant/$id/": {
      "filePath": "restaurant.$id.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
